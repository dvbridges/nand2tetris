@256
D=A
@SP
AM=D
@RETURN$Sys.init$0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0; JMP
(RETURN$Sys.init$0)
// function Sys.init 0
(Sys.init)
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
AM=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
AM=M+1
// call Class1.set 2
@RETURN$Class1.set$1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0; JMP
(RETURN$Class1.set$1)
// pop temp 0 
@0
D=A
@R5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
AM=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
AM=M+1
// call Class2.set 2
@RETURN$Class2.set$2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0; JMP
(RETURN$Class2.set$2)
// pop temp 0 
@0
D=A
@R5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// call Class1.get 0
@RETURN$Class1.get$3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0; JMP
(RETURN$Class1.get$3)
// call Class2.get 0
@RETURN$Class2.get$4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0; JMP
(RETURN$Class2.get$4)
// label WHILE
(WHILE)
// goto WHILE
@WHILE
0; JMP
// function Class1.set 0
(Class1.set)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// pop static 0
@SP
AM=M-1
D=M
@R13
M=D
@Class1.vm.0
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// pop static 1
@SP
AM=M-1
D=M
@R13
M=D
@Class1.vm.1
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
AM=M+1
// return
@LCL
D=M
@SAVEFRAME
M=D
@5
D=A
@SAVEFRAME
D=M-D
A=D
D=M
@RET_ADDR
M=D
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@SAVEFRAME
A=M-D
D=M
@THAT
M=D
@2
D=A
@SAVEFRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@SAVEFRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
A=M
@SAVEFRAME
A=M-D
D=M
@LCL
M=D
@RET_ADDR
A=M
0;JMP
// function Class1.get 0
(Class1.get)
// push static 0
@R13
M=D
@Class1.vm.0
D=A
@R14
M=D
@R13
D=M
@R14
A=M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// push static 1
@R13
M=D
@Class1.vm.1
D=A
@R14
M=D
@R13
D=M
@R14
A=M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@LCL
D=M
@SAVEFRAME
M=D
@5
D=A
@SAVEFRAME
D=M-D
A=D
D=M
@RET_ADDR
M=D
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@SAVEFRAME
A=M-D
D=M
@THAT
M=D
@2
D=A
@SAVEFRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@SAVEFRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
A=M
@SAVEFRAME
A=M-D
D=M
@LCL
M=D
@RET_ADDR
A=M
0;JMP
// function Class2.set 0
(Class2.set)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// pop static 0
@SP
AM=M-1
D=M
@R13
M=D
@Class2.vm.0
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// pop static 1
@SP
AM=M-1
D=M
@R13
M=D
@Class2.vm.1
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
AM=M+1
// return
@LCL
D=M
@SAVEFRAME
M=D
@5
D=A
@SAVEFRAME
D=M-D
A=D
D=M
@RET_ADDR
M=D
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@SAVEFRAME
A=M-D
D=M
@THAT
M=D
@2
D=A
@SAVEFRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@SAVEFRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
A=M
@SAVEFRAME
A=M-D
D=M
@LCL
M=D
@RET_ADDR
A=M
0;JMP
// function Class2.get 0
(Class2.get)
// push static 0
@R13
M=D
@Class2.vm.0
D=A
@R14
M=D
@R13
D=M
@R14
A=M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// push static 1
@R13
M=D
@Class2.vm.1
D=A
@R14
M=D
@R13
D=M
@R14
A=M
D=M
@SP
A=M
M=D
@SP
AM=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@LCL
D=M
@SAVEFRAME
M=D
@5
D=A
@SAVEFRAME
D=M-D
A=D
D=M
@RET_ADDR
M=D
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@SAVEFRAME
A=M-D
D=M
@THAT
M=D
@2
D=A
@SAVEFRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@SAVEFRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
A=M
@SAVEFRAME
A=M-D
D=M
@LCL
M=D
@RET_ADDR
A=M
0;JMP
